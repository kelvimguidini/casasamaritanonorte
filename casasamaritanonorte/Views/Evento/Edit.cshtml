@model casasamaritanonorte.ViewModels.EventoViewModels
@{
    ViewBag.Title = "Editar Evento " + Model.Titulo;
}


<link href="~/Content/bootstrap-fileinput/css/fileinput.min.css" media="all" rel="stylesheet" type="text/css" />
<!-- if using RTL (Right-To-Left) orientation, load the RTL CSS file after fileinput.css by uncommenting below -->
<!-- link href="~/Content/bootstrap-fileinput/css/fileinput-rtl.min.css" media="all" rel="stylesheet" type="text/css" /-->
<!-- piexif.min.js is needed for auto orienting image files OR when restoring exif data in resized images and when you
    wish to resize images before upload. This must be loaded before fileinput.min.js -->
<script src="~/Scripts/plugins/piexif.min.js" type="text/javascript"></script>
<!-- sortable.min.js is only needed if you wish to sort / rearrange files in initial preview.
    This must be loaded before fileinput.min.js -->
<script src="~/Scripts/plugins/sortable.min.js" type="text/javascript"></script>
<!-- purify.min.js is only needed if you wish to purify HTML content in your preview for
    HTML files. This must be loaded before fileinput.min.js -->
<script src="~/Scripts/plugins/purify.min.js" type="text/javascript"></script>
<!-- popper.min.js below is needed if you use bootstrap 4.x. You can also use the bootstrap js
   3.3.x versions without popper.min.js. -->
<script src="~/Scripts/js/popper.min.js"></script>

<!-- the main fileinput plugin file -->
<script src="~/Scripts/fileinput.js"></script>
<!-- optionally if you need a theme like font awesome theme you can include it as mentioned below -->
<script src="~/Content/bootstrap-fileinput/themes/fas/theme.js"></script>
<!-- optionally if you need translation for your language then include  locale file as mentioned below -->
<script src="~/Scripts/locales/pt-BR.js"></script>
<!-- Begin Page Content -->
<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@ViewBag.Title</h1>
    </div>
    <div class="row">


        <div class="col-lg-8">

            <!-- Basic Card Example -->
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Informações Gerais</h6>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Edit", "Evento", FormMethod.Post, new { @class = "col-lg-12", role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.ValidationSummary("", new { @class = "text-danger" })

                        <div>
                            @Html.LabelFor(m => m.Titulo, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.Titulo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.DataEvento, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DataEvento, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DataEvento, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.Caption, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Caption, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Caption, "", new { @class = "text-danger" })
                        </div>
                        <div>
                            @Html.LabelFor(model => model.Texto, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Texto, new { @class = "form-control text-box single-line" })
                            @Html.ValidationMessageFor(model => model.Texto, "", new { @class = "text-danger" })
                        </div>

                        <div>
                            @Html.LabelFor(model => model.CaminhoCapa, htmlAttributes: new { @class = "control-label" })
                            <input type="file" id="fileUpload" class="form-control" name="CaminhoCapa" />
                            @Html.ValidationMessageFor(model => model.CaminhoCapa, "", new { @class = "text-danger" })
                        </div>

                        <hr />

                        <h5>Album</h5>

                        <p><b>OBS: </b>Esse album é opcional e criará uma apresentação de slide.</p>
                        <p><b>OBS: </b>Selecione todas as imagens que será postada antes de clicar em salva.</p>

                        <div>
                            <div class="file-loading">
                                <input id="file-es" name="file-es[]" type="file" multiple>
                            </div>
                        </div>

                        <hr />
                        <button type="submit" class="btn btn-success btn-icon-split">

                            <span class="icon text-white-50">
                                <i class="fas fa-check"></i>
                            </span>
                            <span class="text">Salvar</span>
                        </button>
                    }
                </div>
            </div>

        </div>

        <div class="col-lg-4">

        </div>


    </div>
    <!-- /.container-fluid -->
</div>
<!-- End of Main Content -->
<script src="//cdn.ckeditor.com/4.11.4/standard/ckeditor.js"></script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    $(document).ready(function () {

        CKEDITOR.replace('Texto');

        $('#DataEvento').datepicker({
            dateFormat: 'dd/mm/yy',
            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
            dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            nextText: 'Proximo',
            prevText: 'Anterior'
        });
        $('#DataEvento').mask('99/99/9999');



        var url1 = 'http://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/FullMoon2010.jpg/631px-FullMoon2010.jpg',
            url2 = 'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Earth_Eastern_Hemisphere.jpg/600px-Earth_Eastern_Hemisphere.jpg';
        $('#file-es').fileinput({
            initialPreview: [ @if (ViewBag.album != null && ViewBag.album.Fotos != null)
            {
                foreach (casasamaritanonorte.Models.Foto foto in ViewBag.album.Fotos)
                {
                    <text>
                        "@Url.Content("~/Imagens/Uploads/Eventos/Albuns/" + foto.Caminho)",
                    </text>
                }

                           }],
            initialPreviewConfig: [@if (ViewBag.album != null && ViewBag.album.Fotos != null)
            {
                foreach (casasamaritanonorte.Models.Foto foto in ViewBag.album.Fotos)
                {
                    <text>
                        { downloadUrl: "@Url.Content("~/Imagens/Uploads/Eventos/Albuns/" + foto.Caminho)", width: "120px", key: @foto.ID },
                    </text>
                }

            }],
            initialPreviewAsData: true,
            deleteUrl: "@Url.Action("DeleteFoto", "Evento")",
            theme: 'fas',
            language: 'pt-BR',
            uploadUrl: "@Url.Action("UploadAlbum","Evento")",
            allowedFileExtensions: ['jpeg', 'jpg', 'png', 'gif', 'ico'],
            showUpload: false,
            overwriteInitial: false,
            //enableResumableUpload: false,
        });
    });

</script>