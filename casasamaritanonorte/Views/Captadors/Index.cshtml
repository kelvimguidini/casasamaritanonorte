@model IEnumerable<casasamaritanonorte.ViewModels.CaptadorViewModels>
@{
    ViewBag.Title = "Lista de captadores";
}

<!-- Begin Page Content -->
<div class="container-fluid">
    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">@ViewBag.Title</h1>
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Dados dos Captadores</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-striped table-sm" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Nome)</th>
                            <th>@Html.DisplayNameFor(model => model.DataNascimento)</th>
                            <th>@Html.DisplayNameFor(model => model.Email)</th>
                            <th>@Html.DisplayNameFor(model => model.CPF)</th>
                            <th>@Html.DisplayNameFor(model => model.Telefone)</th>
                            <th>@Html.DisplayNameFor(model => model.Banco)</th>
                            <th>@Html.DisplayNameFor(model => model.Agencia)</th>
                            <th>@Html.DisplayNameFor(model => model.Conta)</th>
                            <th>@Html.DisplayNameFor(model => model.tipoConta)</th>
                            <th>@Html.DisplayNameFor(model => model.Multirao)</th>
                            <th>@Html.DisplayNameFor(model => model.Integral)</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td>@Html.DisplayNameFor(model => model.Nome)</td>
                            <td>@Html.DisplayNameFor(model => model.DataNascimento)</td>
                            <td>@Html.DisplayNameFor(model => model.Email)</td>
                            <td>@Html.DisplayNameFor(model => model.CPF)</td>
                            <td>@Html.DisplayNameFor(model => model.Telefone)</td>
                            <td>@Html.DisplayNameFor(model => model.Banco)</td>
                            <td>@Html.DisplayNameFor(model => model.Agencia)</td>
                            <td>@Html.DisplayNameFor(model => model.Conta)</td>
                            <td>@Html.DisplayNameFor(model => model.tipoConta)</td>
                            <td>@Html.DisplayNameFor(model => model.Multirao)</td>
                            <td>@Html.DisplayNameFor(model => model.Integral)</td>
                            <td>Ações</td>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                                <td>@Html.DisplayFor(modelItem => item.DataNascimento)</td>
                                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                <td>@Html.DisplayFor(modelItem => item.CPF)</td>
                                <td>@Html.DisplayFor(modelItem => item.Telefone)</td>
                                <td>@Html.DisplayFor(modelItem => item.Banco)</td>
                                <td>@Html.DisplayFor(modelItem => item.Agencia)</td>
                                <td>@Html.DisplayFor(modelItem => item.Conta)</td>
                                <td>
                                    @if (item.tipoConta == 1)
                                    {
                                        @Html.Display("Corrente")
                                    }
                                    else
                                    {
                                        @Html.Display("Poupança")
                                    }
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.Multirao)</td>
                                <td>@Html.DisplayFor(modelItem => item.Integral)</td>
                                <td>
                                    <a href="@Url.Action("Edit", "Captadors", new { id = item.ID })" class="btn btn-info btn-circle">
                                        <i class="far fa-edit"></i>
                                    </a>
                                    |
                                    <a href="#" data-id="@item.ID" class="btn btn-danger btn-circle delete"  data-toggle="modal" data-target="#Excluir">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- /.container-fluid -->

<script>
    $(document).ready(function () {

        $('#dataTable').DataTable({
            "language": {
                "sEmptyTable": "Nenhum registro encontrado",
                "sInfo": "Mostrando de _START_ até _END_ de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando 0 até 0 de 0 registros",
                "sInfoFiltered": "(Filtrados de _MAX_ registros)",
                "sInfoPostFix": "",
                "sInfoThousands": ".",
                "sLengthMenu": "_MENU_ resultados por página",
                "sLoadingRecords": "Carregando...",
                "sProcessing": "Processando...",
                "sZeroRecords": "Nenhum registro encontrado",
                "sSearch": "Pesquisar",
                "oPaginate": {
                    "sNext": "Próximo",
                    "sPrevious": "Anterior",
                    "sFirst": "Primeiro",
                    "sLast": "Último"
                },
                "oAria": {
                    "sSortAscending": ": Ordenar colunas de forma ascendente",
                    "sSortDescending": ": Ordenar colunas de forma descendente"
                }
            }
        });
    });


    $(".delete").click(function () {
        var id = $(this).attr("data-id");
        $("#form-excluir").prop('action', '@Url.Action("Delete", "Captadors")/' + id);
        $("#Excluir").modal();
    });
</script>

<!-- Logout Modal-->
<div class="modal fade" id="Excluir" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Deseja realmente excluir esse registro?</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">Ao clicar em "Apagar Registro" a conta será excluída.</div>
            <div class="modal-footer">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form-excluir" }))
                {
                    @Html.AntiForgeryToken()
                    <input class="btn btn-primary" type="submit" value="Apagar Registro" />
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancelar</button>
                }

            </div>
        </div>
    </div>

</div>